apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

react {
    project.ext.vectoricons = [
        iconFontNames: [
            'MaterialCommunityIcons.ttf', 
            'EvilIcons.ttf',
            "MaterialIcons.ttf", 
            "Ionicons.ttf", 
            "FontAwesome.ttf", 
            "AntDesign.ttf"
        ]
    ]
    apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
}

def enableProguardInReleaseBuilds = true
def jscFlavor = 'org.webkit:android-jsc:+'
def hermesEnabled = true // Enable Hermes

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.reelzzz_app"
    defaultConfig {
        applicationId "com.reelzzz_app"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 2 // Update as necessary
        versionName "1.1" // Update as necessary
        multiDexEnabled true // MultiDex support

        manifestPlaceholders = [
            googleAuthWebClientId: "517832991609-dsos1loeej644bjr4lj4ouumfdr8j2cs.apps.googleusercontent.com"
        ]
        // Uncomment and replace with your actual CodePush key if needed
        // resValue "string", "CodePushDeploymentKey", "YOUR_DEPLOYMENT_KEY"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            shrinkResources true  // Remove unused resources
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro" // Use optimized ProGuard rules
            ndk {
                debugSymbolLevel 'none' // Remove debug symbols
            }
        }
    }
    
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a'  // Include only the necessary ABIs
            universalApk false
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    // Uncomment if you are using CodePush
    // implementation "com.microsoft.codepush:code-push-react-native:6.4.0"

    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.slf4j:slf4j-simple:1.7.30' // SLF4J binding
    implementation 'androidx.multidex:multidex:2.0.1' // MultiDex support

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle");
applyNativeModulesAppBuildGradle(project)